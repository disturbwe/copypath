{"version":3,"sources":["webpack://copypath/external \"vscode\"","webpack://copypath/webpack/bootstrap","webpack://copypath/./src/extension.ts"],"names":["module","exports","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","context","getUrl","path","url","_formatted","split","vscode","window","showErrorMessage","disposable1","commands","registerCommand","env","clipboard","writeText","disposable2","filename","file","pop","getFilename","subscriptions","push"],"mappings":"kCAAAA,EAAOC,QAAUC,QAAQ,YCCrBC,EAA2B,GAG/B,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaL,QAGrB,IAAID,EAASG,EAAyBE,GAAY,CAGjDJ,QAAS,IAOV,OAHAO,EAAoBH,GAAUL,EAAQA,EAAOC,QAASG,GAG/CJ,EAAOC,Q,uGCnBf,eAIA,oBAAyBQ,GACxB,SAASC,EAAQC,GAChB,IAAIC,EAAaD,EAAKE,WACtB,OAAKD,EAAIE,MAAM,OAAO,GAIb,KAAKF,EAAIE,MAAM,OAAO,OAH9BC,EAAOC,OAAOC,iBAAiB,2BACxB,IAUT,IAAIC,EAAcH,EAAOI,SAASC,gBAAgB,6BAA8BT,IAC/E,IAAIC,EAAMF,EAAOC,GACjBI,EAAOM,IAAIC,UAAUC,UAAUX,MAE5BY,EAAcT,EAAOI,SAASC,gBAAgB,2BAA4BT,IAC7E,MAAMC,EAAMF,EAAOC,GACbc,EAXP,SAAsBb,GACrB,IACIc,EADMd,EAAIE,MAAM,KACLa,MACf,OAAQD,GAAMA,EAAKZ,MAAM,KAAK,IAAO,GAQpBc,CAAYhB,GAC7BG,EAAOM,IAAIC,UAAUC,UAAU,UAAUE,UAAiBb,QAE3DH,EAAQoB,cAAcC,KAAKZ,GAC3BT,EAAQoB,cAAcC,KAAKN,IAE5B,2B","file":"extension.js","sourcesContent":["module.exports = require(\"vscode\");;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// The module 'vscode' contains the VS Code extensibility API\n// Import the module and reference it with the alias vscode in your code below\nimport * as vscode from 'vscode';\n\n// this method is called when your extension is activated\n// your extension is activated the very first time the command is executed\nexport function activate(context: vscode.ExtensionContext) {\n\tfunction getUrl (path: any):string {\n\t\tlet url:string = path._formatted;\n\t\tif (!url.split('src')[1]) {\n\t\t\tvscode.window.showErrorMessage(\"copypath: 请选择在src目录下的文件\");\n\t\t\treturn '';\n\t\t} else {\n\t\t\treturn  `'@${url.split('src')[1]}'`;\n\t\t}\n\t}\n\tfunction getFilename (url: string):string {\n\t\tlet arr = url.split('/');\n\t\tlet file = arr.pop();\n\t\treturn (file&&file.split('.')[0] )|| '';\n\t}\n\tlet disposable1 = vscode.commands.registerCommand('copypath.copyRelativePath', (path) => {\n\t\tlet url = getUrl(path);\n\t\tvscode.env.clipboard.writeText(url);\n\t});\n\tlet disposable2 = vscode.commands.registerCommand('copypath.copyImportWord', (path) => {\n\t\tconst url = getUrl(path);\n\t\tconst filename = getFilename(url);\n\t\tvscode.env.clipboard.writeText(`import ${filename} from ${url}`);\n\t});\n\tcontext.subscriptions.push(disposable1);\n\tcontext.subscriptions.push(disposable2);\n}\nexport function deactivate() {}\n"],"sourceRoot":""}